class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
           if((p==null && q!=null) || (p!=null && q==null))
           return false;
           if(p==null && q==null)
           return true;
           Queue<TreeNode>q1=new LinkedList<>();
           Queue<TreeNode>q2=new LinkedList<>();
           q1.offer(p);
           q2.offer(q);
           while(!q1.isEmpty() && !q2.isEmpty())
           {
            TreeNode t1=q1.poll();
            TreeNode t2=q2.poll();
            if((t1==null && t2!=null) || (t1!=null && t2==null))
            return false;
            if((t1.left!=null && t2.left==null) || (t2.left!=null && t1.left==null))
            return false;
            if((t1.right!=null && t2.right==null) || (t2.right!=null && t1.right==null))
            return false;
            if(t1.val!=t2.val)
            return false;
            if(t1.left!=null && t2.left!=null)
            {
                q1.offer(t1.left);
                q2.offer(t2.left);
            }
            if(t1.right!=null && t2.right!=null)
            {
                q1.offer(t1.right);
                q2.offer(t2.right);      
            }
           } 
           return true;  
    }
}
