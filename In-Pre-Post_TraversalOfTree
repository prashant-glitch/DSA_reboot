 Following is the TreeNode structure:

 class TreeNode {
     int data;
     TreeNode left;
     TreeNode right;
     TreeNode() {
         this.data = 0;
         this.left = null;
         this.right = null;
     }
     TreeNode(int data) {
         this.data = data;
         this.left = null;
         this.right = null;
     }
     TreeNode(int data, TreeNode left, TreeNode right) {
         this.data = data;
         this.left = left;
         this.right = right;
     }
 };
 ********************************************************/

import java.util.List;
import java.util.*;
public class Solution {
    public static List<List<Integer>> getTreeTraversal(TreeNode root) {
        // Write your code here.
        List<Integer>InOrder=new ArrayList<>();
        List<Integer>PreOrder=new ArrayList<>();
        List<Integer>PostOrder=new ArrayList<>();
        List<List<Integer>> res=new ArrayList<>();
        inOrder(root,InOrder);
        preOrder(root,PreOrder);
        postOrder(root,PostOrder);
        res.add(InOrder);
        res.add(PreOrder);
        res.add(PostOrder);
        return res;
    }
    public static void inOrder(TreeNode root, List<Integer>list)
    {
        if(root==null)
        {
            return;
        }
        inOrder(root.left, list);
        list.add(root.data);
        inOrder(root.right, list);
    }
    public static void preOrder(TreeNode root, List<Integer>list)
    {
        if(root==null)
        {
            return;
        }
        list.add(root.data);
        preOrder(root.left, list);
        preOrder(root.right, list);
    }
    public static void postOrder(TreeNode root, List<Integer>list)
    {
        if(root==null)
        {
            return;
        }
        
        postOrder(root.left, list);
        postOrder(root.right, list);
        list.add(root.data);
    }
}
