    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null)
        return null;

        //if current node is either p or q, return it
        if(root==p || root==q)
        return root;
        //recur for left and right children
        TreeNode left=lowestCommonAncestor(root.left,p,q);
        TreeNode right=lowestCommonAncestor(root.right,p,q);

        //if both left and right return a non null value, current node is LCA
        if(left!=null && right!=null)
        return root;
        //otherwise return the non null child 
        return left!=null?left:right;
